
scheme ClassBrowser  {
  var dictionary.
  -initWithDictionary:aDict {
	self setDictionary:aDict.
	self.
  }
  -classDefs {
	self dictionary.
  }

  -<int>hasChildren:ref {
     ref relativePathComponents count < 3.
  }

  /. {
     |= {
        classNames := self classDefs | allKeys | sorted.
        self collect referenceForPath:classNames each.
     }
  }

  /:className/:which/:methodName { 
     |= {
		self classDefs at:className | at:which | at:methodName.
     }
	 =| {
		self classDefs at:className | at:which | at:methodName put:newValue.
     }
  }

  /:className/:which { 
     |= {
        paths := self classDefs at:className | at:which | allKeys | sorted.
        theRef referencesByAppendingPaths: paths .
     }
  }

  /:className {
     |= {
         self:{className}/instanceMethods.
     }
   }
}
